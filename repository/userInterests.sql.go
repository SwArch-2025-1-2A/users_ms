// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: userInterests.sql

package repository

import (
	"context"

	"github.com/google/uuid"
)

const addUserInterest = `-- name: AddUserInterest :one
INSERT INTO "UserInterests"("user_id", "interest_id")
VALUES ($1, $2)
RETURNING user_id, interest_id
`

type AddUserInterestParams struct {
	UserID     uuid.UUID
	InterestID uuid.UUID
}

func (q *Queries) AddUserInterest(ctx context.Context, arg AddUserInterestParams) (UserInterest, error) {
	row := q.db.QueryRow(ctx, addUserInterest, arg.UserID, arg.InterestID)
	var i UserInterest
	err := row.Scan(&i.UserID, &i.InterestID)
	return i, err
}

const removeUserInterest = `-- name: RemoveUserInterest :exec
DELETE FROM "UserInterests"
WHERE "user_id" = $1
  AND "interest_id" = $2
`

type RemoveUserInterestParams struct {
	UserID     uuid.UUID
	InterestID uuid.UUID
}

func (q *Queries) RemoveUserInterest(ctx context.Context, arg RemoveUserInterestParams) error {
	_, err := q.db.Exec(ctx, removeUserInterest, arg.UserID, arg.InterestID)
	return err
}
